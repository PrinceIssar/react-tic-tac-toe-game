{"ast":null,"code":"var _jsxFileName = \"/Users/princeissar/git/BeCode/React-Projects/tictac/src/Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  // Game is functional component to save data we need useSate , it provide value , and to set the value\n  const [board, markPositionOnBoard] = useState([[], [], []]); // 2D array : it has array which has array type array,\n  // a array which has 3 elements(first array represents the horizontal way and second array represent the 2nd horizontal array)\n\n  const [player, setPlayer] = useState(0); //by default the 0 player means the first player will work\n  // declare handlePress\n\n  const handlePress = (row, column) => {\n    // the value of 0 ,0 or other needs to store in board and how to preserve it\n    const newBoard = board.slice(); // this will just copy the same array and gives us back with new ref,\n    // we'll change it with it's handler(markPositionOnBoard) ,not directly any modification\n    // verify first\n\n    if (newBoard[row][column] !== undefined) {\n      // that means any user move can work here\n      newBoard[row][column] = player; //which player is working, first player will work first\n\n      setPlayer(1 - player); // that means the 2nd player will work now, and 1 - player is 0 that means the 1st player will play now.\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TIC TAC TOE GAME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear\",\n          children: \"START NEW GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player1\",\n          children: \"Player 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player2\",\n          children: \"Player 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(0, 0),\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(0, 1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(0, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(1, 0),\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(1, 1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(1, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(2, 0),\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(2, 1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(2, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"gt217c+57o0/7GzYHAAGNaDxdMM=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/princeissar/git/BeCode/React-Projects/tictac/src/Game.jsx"],"names":["React","useState","Game","board","markPositionOnBoard","player","setPlayer","handlePress","row","column","newBoard","slice","undefined"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nconst Game = ()=>{\n    // Game is functional component to save data we need useSate , it provide value , and to set the value\n    const [board,markPositionOnBoard] = useState([ [] ,[] ,[]] ) // 2D array : it has array which has array type array,\n\n    // a array which has 3 elements(first array represents the horizontal way and second array represent the 2nd horizontal array)\n    const [player, setPlayer] = useState(0); //by default the 0 player means the first player will work\n\n    // declare handlePress\n    const handlePress= (row,column)=>{\n        // the value of 0 ,0 or other needs to store in board and how to preserve it\n        const newBoard = board.slice(); // this will just copy the same array and gives us back with new ref,\n        // we'll change it with it's handler(markPositionOnBoard) ,not directly any modification\n        // verify first\n        if (newBoard [row] [column] !== undefined){ // that means any user move can work here\n            newBoard[row] [column] = player //which player is working, first player will work first\n            setPlayer(1- player); // that means the 2nd player will work now, and 1 - player is 0 that means the 1st player will play now.\n        }\n    };\n\n\n\n\n    return (\n        <div className=\"container\">\n            <h1>TIC TAC TOE GAME</h1>\n            <div>\n                <div className=\"controls\">\n                    <button className=\"clear\">START NEW GAME</button>\n                </div>\n                <div className=\"player\">\n                    <div className=\"player1\">Player 1</div>\n                    <div className=\"player2\">Player 2</div>\n                </div>\n                <div className=\"table_wrapper\">\n                    <table>\n                        <tbody>\n                        {/*this represents the first row , and 0 is the first index and 0.1 second and so on */}\n                        <tr>\n                            <td onClick={()=> handlePress(0,0)}> </td>\n                            <td onClick={()=> handlePress(0,1)}></td>\n                            <td onClick={()=> handlePress(0,2)}></td>\n                        </tr>\n                        <tr>\n                            {/* 1 means first row , 0 means 2nd column*/}\n                            <td onClick={()=> handlePress(1,0)}> </td>\n                            <td onClick={()=> handlePress(1,1)}></td>\n                            <td onClick={()=> handlePress(1,2)}></td>\n                        </tr>\n                        <tr>\n                            <td onClick={()=> handlePress(2,0)}> </td>\n                            <td onClick={()=> handlePress(2,1)}></td>\n                            <td onClick={()=> handlePress(2,2)}></td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Game;"]},"metadata":{},"sourceType":"module"}