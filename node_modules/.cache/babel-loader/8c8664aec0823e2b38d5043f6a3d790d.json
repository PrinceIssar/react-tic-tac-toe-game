{"ast":null,"code":"var _jsxFileName = \"/Users/princeissar/git/BeCode/React-Projects/tictac/src/Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Clear from './icon/clear.png';\nimport Done from './icon/done.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  // Game is functional component to save data we need useSate , it provide value , and to set the value\n  const [board, markPositionOnBoard] = useState([[], [], []]); // 2D array : it has array which has array type array,\n  // a array which has 3 elements(first array represents the horizontal way and second array represent the 2nd horizontal array)\n\n  const [player, setPlayer] = useState(0); //by default the 0 player means the first player will work\n  // declare handlePress\n\n  const handlePress = (row, column) => {\n    // the value of 0 ,0 or other needs to store in board and how to preserve it\n    const newBoard = board.slice(); // this will just copy the same array and gives us back with new ref,\n    // we'll change it with it's handler(markPositionOnBoard) ,not directly any modification\n    // verify first\n\n    if (newBoard[row][column] === undefined) {\n      // that means any user move can work here\n      newBoard[row][column] = player; //which player is working, first player will work first\n\n      setPlayer(1 - player); // toggling : that means the 2nd player will work now, and 1 - player is 0 that means the 1st player will play now.\n\n      markPositionOnBoard(newBoard); // replace the old board to new board with latest\n    } // after every move log\n\n\n    console.log(newBoard);\n  }; // to show the image we write a function getBoxView,which will return a jsx\n\n\n  const getBoxView = (row, column) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [board[row][column] === 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Clear,\n      alt: \"empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 42\n    }, this), board[row][column] === 1 && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Done,\n      alt: \"empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TIC TAC TOE GAME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear\",\n          children: \"START NEW GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player1 \" + (player === 0 ? 'turn' : 'wait'),\n          children: \"Player 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player2 \" + (player === 1 ? 'turn' : 'wait'),\n          children: \"Player 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(0, 0),\n                children: [\"  \", getBoxView(0, 0)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(0, 1),\n                children: [getBoxView(0, 1), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(0, 2),\n                children: [\" \", getBoxView(0, 2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(1, 0),\n                children: [\" \", getBoxView(1, 0)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(1, 1),\n                children: [\" \", getBoxView(1, 1)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(1, 2),\n                children: [\" \", getBoxView(1, 2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(2, 0),\n                children: [\" \", getBoxView(2, 0)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(2, 1),\n                children: [\" \", getBoxView(2, 1)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handlePress(2, 2),\n                children: [\" \", getBoxView(2, 2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"xSIHnrO6quaUEyxdkLywB5i9+XY=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/princeissar/git/BeCode/React-Projects/tictac/src/Game.jsx"],"names":["React","useState","Clear","Done","Game","board","markPositionOnBoard","player","setPlayer","handlePress","row","column","newBoard","slice","undefined","console","log","getBoxView"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Clear from './icon/clear.png';\nimport Done from './icon/done.png';\n\nconst Game = () => {\n    // Game is functional component to save data we need useSate , it provide value , and to set the value\n    const [board, markPositionOnBoard] = useState([[],[],[]]); // 2D array : it has array which has array type array,\n\n    // a array which has 3 elements(first array represents the horizontal way and second array represent the 2nd horizontal array)\n    const [player, setPlayer] = useState(0); //by default the 0 player means the first player will work\n\n    // declare handlePress\n    const handlePress = (row,column) => {\n        // the value of 0 ,0 or other needs to store in board and how to preserve it\n        const newBoard = board.slice(); // this will just copy the same array and gives us back with new ref,\n        // we'll change it with it's handler(markPositionOnBoard) ,not directly any modification\n        // verify first\n        if (newBoard[row][column] === undefined){ // that means any user move can work here\n            newBoard[row][column] = player //which player is working, first player will work first\n            setPlayer(1 - player); // toggling : that means the 2nd player will work now, and 1 - player is 0 that means the 1st player will play now.\n             markPositionOnBoard(newBoard); // replace the old board to new board with latest\n        }\n        // after every move log\n        console.log(newBoard);\n    };\n    // to show the image we write a function getBoxView,which will return a jsx\n    const getBoxView = (row,column) => (\n        <>\n            {/*it's played from first player then it'll show the img*/}\n            {board[row][column] === 0 && <img src={Clear} alt=\"empty\" />}\n            {board[row][column] === 1 &&  <img src={Done} alt=\"empty\" />}\n        </>\n    )\n    return (\n        <div className=\"container\">\n            <h1>TIC TAC TOE GAME</h1>\n            <div>\n                <div className=\"controls\">\n                    <button className=\"clear\">START NEW GAME</button>\n                </div>\n                <div className=\"player\">\n                    {/*it'll change the color if it's true , turny operator*/}\n                    <div className={\"player1 \" + (player === 0 ? 'turn' : 'wait')}>Player 1</div>\n                    <div className={\"player2 \" + (player === 1 ? 'turn': 'wait')}>Player 2</div>\n                </div>\n                <div className=\"table_wrapper\">\n                    <table>\n                        <tbody>\n                        {/*this represents the first row , and 0 is the first index and 0.1 second and so on */}\n                        <tr>\n                            <td onClick={()=> handlePress(0,0)}>  {getBoxView(0,0)}</td>\n                            {/*to show the image we write a function getBoxView,which will return a jsx*/}\n\n                            <td onClick={()=> handlePress(0,1)}>{getBoxView(0,1)} </td>\n                            <td onClick={()=> handlePress(0,2)}> {getBoxView(0,2)}</td>\n                        </tr>\n                        <tr>\n                            {/* 1 means first row , 0 means 2nd column*/}\n                            <td onClick={()=> handlePress(1,0)}> {getBoxView(1,0)}</td>\n                            <td onClick={()=> handlePress(1,1)}> {getBoxView(1,1)}</td>\n                            <td onClick={()=> handlePress(1,2)}> {getBoxView(1,2)}</td>\n                        </tr>\n                        <tr>\n                            <td onClick={()=> handlePress(2,0)}> {getBoxView(2,0)}</td>\n                            <td onClick={()=> handlePress(2,1)}> {getBoxView(2,1)}</td>\n                            <td onClick={()=> handlePress(2,2)}> {getBoxView(2,2)}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Game;"]},"metadata":{},"sourceType":"module"}